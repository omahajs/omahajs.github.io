.light-rays {
  background-color: @even_color_day;
  & .ray {
    background-color: @odd_color_day;
    &:nth-of-type(2n) {
      background-color: @even_color_day;
    }
  }
}
.light-rays {
  overflow: hidden;
  height: unit(@banner_height, @banner_height_units);
  min-height: unit(@banner_min_height, px);
  display: block;
  position: fixed;
  top: 0;
  width: 50vw;
  & .ray {
    border: none;
    bottom: -20px;
    height: 1000vh;
    position: absolute;
    width: 1000vw;
  }
}
.left .ray {
  right: 0;
}
.right .ray {
  left: 0;
}
.generate-light-rays-left(@n, @i: 1) when (@i =< @n) {
  .left .ray:nth-of-type(@{i}) {
    transform-origin: bottom right;
    transform: rotateZ(unit(-10 * @i, deg));
  }
  .generate-light-rays-left(@n, (@i + 1));
}
.generate-light-rays-right(@n, @i: 1) when (@i =< @n) {
  .right .ray:nth-of-type(@{i}) {
    transform-origin: bottom left;
    transform: rotateZ(unit(-10 * @i, deg));
  }
  .generate-light-rays-right(@n, (@i + 1));
}
.generate-light-rays-left(8);
.generate-light-rays-right(8);
